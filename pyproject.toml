[project]
name = "vehiculos-ircc-app"
version = "0.1.0"
description = "Detección y conteo de vehículos con YOLO, gRPC y (opcional) UI."
readme = "README.md"
requires-python = ">=3.12"

# Dependencias principales (trasladadas desde requirements.txt)
dependencies = [
  # YOLO + visión por computadora
  "ultralytics>=8.3.0",
  "supervision>=0.19.0",
  "opencv-python>=4.9.0",
  "numpy>=1.24",
  "pillow>=10.0.0",
  "matplotlib>=3.7.0",
  "seaborn>=0.12.0",

  # UI opcional con Streamlit (la dejamos en deps base para evitar fallos si la usas en runtime;
  # si la quieres como extra, avísame y la muevo a [project.optional-dependencies])
  "streamlit>=1.38",

  # gRPC
  "grpcio>=1.62",
  "grpcio-tools>=1.62",
  "protobuf>=4.25",

  # MLflow para experiment tracking
  "mlflow>=2.8.0",
  "psutil>=5.9.0",

  # Herramientas de testing (incluidas para que `uv sync` en CI tenga pytest/coverage)
  "pytest>=7.4",
  "coverage>=7.4",
]

# (Opcional) Extras si quieres poder instalar sólo algunos componentes
[project.optional-dependencies]
# Instalar con: uv sync --extra ui
ui = ["streamlit>=1.38"]
# Instalar con: uv sync --extra grpc
grpc = ["grpcio>=1.62", "grpcio-tools>=1.62", "protobuf>=4.25"]
# Instalar con: uv sync --extra mlflow
mlflow = ["mlflow>=2.8.0", "psutil>=5.9.0"]
# Instalar con: uv sync --extra test
test = ["pytest>=7.4", "coverage>=7.4"]

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]

# Notas:
# - Ultralytics instalará PyTorch (CPU) automáticamente.
# - Para GPU/CUDA, instala la variante adecuada de torch según tu hardware:
#   https://pytorch.org/get-started/locally/

# (Opcional) Si planeas empaquetar/publicar
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]
